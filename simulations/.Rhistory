ggplot(data = new, aes( x = ID, y =  value, col = source))+
geom_violin(size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = value, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid(variable~source , scales = 'free',  labeller = vlabeller)+
#   stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Fixed-Class DFE')+
TommyTheme
demo <- read.csv('dfe-alpha/DemographicAnalysis.csv')
demo$ratio3 <- demo$N3/demo$N1
demo$ratio2 <- demo$N2/demo$N1
demo$ratio1 <- demo$N1/demo$N1
vars <- c("L","N1","N2","N3","Nw","dL", "epochs", "f0", "f2n", "t2", "t3", "model")
#vars <- c("L","N1","N2","N3","Nw", "epochs", "f0", "f2n", "t2", "t3", "model")
newDemo <- melt(demo, id = vars)
#newDemo <- demo #melt(demo, id = vars)
newDemo$Epochs <- as.factor(newDemo$epochs)
library(ggplot2)
ggplot(data = newDemo, aes(x = model, y = 2*dL, col = Epochs ))+
geom_point(size = 2)+
scale_color_manual('# Epochs',values = pal)+
geom_hline(yintercept=5.99, alpha = 0.5, lty = 2)+
scale_y_log10(expression('2'*Delta * 'lnL'))+
scale_x_discrete('')+
TommyTheme+
coord_flip()
rm(list=ls())
pal <- wes_palette(n = 5, name = "Royal1", type = "continuous")
TommyTheme <-
theme_bw()+
theme(
axis.title.x = element_text(size=14,angle=0),
axis.title.y = element_text(size=17,vjust=0.5),
axis.text.x = element_text(size=12,angle=90),
axis.text.y = element_text(size=12,angle=0),
strip.text.y = element_text(size = 20, face = 'italic'),
strip.text.x = element_text(size = 20, face = 'italic')
)
polyDFEraw = read.csv('run_polyDFE/ExponentialPolyDFE.csv')
polyDFE <- melt(polyDFEraw, id = c('model', 'number', 'b','S_d'))
polyDFE$identifier <- polyDFE$model
polyDFE$source <- 'polyDFE'
Trough1raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes100_dDFE.Exponential.analysis.txt')
Trough1raw$product<-Trough1raw$NeSa*Trough1raw$pa
Trough1<-melt(Trough1raw, id = c('AIC','identifier','rep','X'))
Trough1$identifier<- 'Exp100'
Trough1$source <- 'Trough-Fitting'
Trough2raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes100_dDFE.Exponential_div10.analysis.txt')
Trough2raw$product<-Trough2raw$NeSa*Trough2raw$pa
Trough2<-melt(Trough2raw, id = c('AIC','identifier','rep','X'))
Trough2$identifier<- 'Exp100 - div10'
Trough2$source <- 'Trough-Fitting'
Trough3raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes10_dDFE.Exponential.analysis.txt')
Trough3raw$product<-Trough3raw$NeSa*Trough3raw$pa
Trough3<-melt(Trough3raw, id = c('AIC','identifier','rep','X'))
Trough3$identifier<- 'Exp10'
Trough3$source <- 'Trough-Fitting'
Trough4raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes10_dDFE.Exponential_div10.analysis.txt')
Trough4raw$product<-Trough4raw$NeSa*Trough4raw$pa
Trough4<-melt(Trough4raw, id = c('AIC','identifier','rep','X'))
Trough4$identifier<- 'Exp10 - div10'
Trough4$source <- 'Trough-Fitting'
Troughs <- rbind(Trough1, Trough2, Trough3, Trough4)
rawExp <- read.csv('~/PhD/Coding/Estimate_selection_from_troughs/simulations/analysis/expSims.csv')
rawExp$product = rawExp$NeSa * rawExp$pa
Exp <- melt(rawExp, id = 'identifier')
vnames <-list(
'NeSa' = expression(gamma[a]),
'pa' = expression(p[a]),
'product' = expression(gamma*p[a]),
'polyDFE' = 'polyDFE',
'Trough-Fitting' = 'Trough-Fitting')
vlabeller <- function(variable,value){
return(vnames[value])
}
Troughs$value <- round(Troughs$value*1e8)/1e8
Troughs$value <- round(Troughs$value*1e8)/1e8
polyDFE$value <- round(polyDFE$value*1e8)/1e8
ggplot(data = polyDFE , aes (x = identifier, y = value, col = source))+
geom_violin(fill= source)+
geom_violin(data = Troughs, aes( x = identifier, y = value, col = source))+
geom_point(data= Exp, aes( x = identifier, y = value, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid(variable~source, scales = 'free', labeller = vlabeller)+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Exponential DFE')+
TommyTheme
ggplot(data = polyDFE , aes (x = identifier, y = value, col = source))+
geom_boxplot(fill= source)+
geom_boxplot(data = Troughs, aes( x = identifier, y = value, col = source))+
geom_point(data= Exp, aes( x = identifier, y = value, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid(variable~source, scales = 'free', labeller = vlabeller)+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Exponential DFE')+
TommyTheme
polyDFE
rm(list=ls())
rm(list=ls())
polyDFEraw = read.csv('run_polyDFE/ExponentialPolyDFE.csv')
polyDFE <- melt(polyDFEraw, id = c('model', 'number', 'b','S_d'))
polyDFE$identifier <- polyDFE$model
polyDFE$source <- 'polyDFE'
Trough1raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes100_dDFE.Exponential.analysis.txt')
setwd("~/PhD/Coding/Estimate_selection_from_troughs/simulations")
polyDFEraw = read.csv('run_polyDFE/ExponentialPolyDFE.csv')
rm(list=ls())
polyDFEraw = read.csv('run_polyDFE/ExponentialPolyDFE.csv')
polyDFE <- melt(polyDFEraw, id = c('model', 'number', 'b','S_d'))
polyDFE$identifier <- polyDFE$model
polyDFE$source <- 'polyDFE'
Trough1raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes100_dDFE.Exponential.analysis.txt')
Trough1raw$product<-Trough1raw$NeSa*Trough1raw$pa
Trough1<-melt(Trough1raw, id = c('AIC','identifier','rep','X'))
Trough1$identifier<- 'Exp100'
Trough1$source <- 'Trough-Fitting'
Trough2raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes100_dDFE.Exponential_div10.analysis.txt')
Trough2raw$product<-Trough2raw$NeSa*Trough2raw$pa
Trough2<-melt(Trough2raw, id = c('AIC','identifier','rep','X'))
Trough2$identifier<- 'Exp100 - div10'
Trough2$source <- 'Trough-Fitting'
Trough3raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes10_dDFE.Exponential.analysis.txt')
Trough3raw$product<-Trough3raw$NeSa*Trough3raw$pa
Trough3<-melt(Trough3raw, id = c('AIC','identifier','rep','X'))
Trough3$identifier<- 'Exp10'
Trough3$source <- 'Trough-Fitting'
Trough4raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes10_dDFE.Exponential_div10.analysis.txt')
Trough4raw$product<-Trough4raw$NeSa*Trough4raw$pa
Trough4<-melt(Trough4raw, id = c('AIC','identifier','rep','X'))
Trough4$identifier<- 'Exp10 - div10'
Trough4$source <- 'Trough-Fitting'
Troughs <- rbind(Trough1, Trough2, Trough3, Trough4)
rawExp <- read.csv('~/PhD/Coding/Estimate_selection_from_troughs/simulations/analysis/expSims.csv')
rawExp$product = rawExp$NeSa * rawExp$pa
Exp <- melt(rawExp, id = 'identifier')
vnames <-list(
'NeSa' = expression(gamma[a]),
'pa' = expression(p[a]),
'product' = expression(gamma*p[a]),
'polyDFE' = 'polyDFE',
'Trough-Fitting' = 'Trough-Fitting')
vlabeller <- function(variable,value){
return(vnames[value])
}
rawExp
Trouhs
Troughs
Trough4raw
Trough2raw
Trough1raw
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
rawBoots <- read.csv('analysis/BimodalSims.csv')
rawBoots$product1 <- rawBoots$NeSa1 * rawBoots$pa1
rawBoots$product2 <- rawBoots$NeSa2 * rawBoots$pa2
Boots<-melt(rawBoots, id = c('identifier'))
rawSims1 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE.analysisScaled.txt')
rawSims1$product1 <- rawSims1$NeSa1 * rawSims1$pa1
rawSims1$product2 <- rawSims1$NeSa2 * rawSims1$pa2
Sims1<-melt(rawSims1, id = c('identifier','X','rep', 'AIC'))
Sims1$identifier <- 'Bimodal'
rawSims2 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE_div10.analysisScaled.txt')
rawSims2$product1 <- rawSims2$NeSa1 * rawSims2$pa1
rawSims2$product2 <- rawSims2$NeSa2 * rawSims2$pa2
Sims2<-melt(rawSims2, id = c('identifier','X','rep', 'AIC'))
Sims2$identifier <- 'Bimodal_div10'
rawSims3 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE_div100.analysisScaled.txt')
rawSims3$product1 <- rawSims3$NeSa1 * rawSims3$pa1
rawSims3$product2 <- rawSims3$NeSa2 * rawSims3$pa2
Sims3<-melt(rawSims3, id = c('identifier','X','rep', 'AIC'))
Sims3$identifier <- 'Bimodal_div100'
Sims <- rbind(Sims1,Sims2,Sims3)
bimLabs <- c("NeSa1","NeSa2","pa1","pa2","product1","product2")
Sims$variable <- factor(Sims$variable, levels = bimLabs,
labels = bimLabs)
Boots$variable <- factor(Boots$variable, levels = bimLabs,
labels = bimLabs)
Sims$source <- 'Trough-Fitting'
selRaw <- read.csv('dfe-alpha/Bimodal_selectedSites.csv')
sel<-melt(selRaw,c("Es","L","N1","N2","N3","Nw","f0", "f2n","identifier", "b",  "rep", "sa.0.","pa.0.","sa.1.","pa.1.","t2","t3"))
sel$source <- 'DFE-alpha'
sel$ID<-paste(sel$identifier)
Sims$ID<-paste(Sims$identifier)
nSims <- subset(Sims, select=c('variable', 'value', 'ID', 'source'))
nsubset<- subset(sel, select=c('variable', 'value', 'ID', 'source'))
new<- rbind(nSims,nsubset)
vnames <-list(
'NeSa1' = expression(gamma[a(1)]),
'NeSa2' = expression(gamma[a(2)]),
'pa1' = expression(p[a(1)]),
'pa2' = expression(p[a(2)]),
'product1' = expression(gamma*p[a(1)]),
'product2' = expression(gamma*p[a(2)]),
'DFE-alpha' = 'DFE-alpha',
'Trough-Fitting' = 'Trough-Fitting')
vlabeller <- function(variable,value){
return(vnames[value])
}
new$value <- round(new$value*1e8)/1e8
ggplot(data = new, aes( x = ID, y =  value, col = source))+
geom_violin( size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = value, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid(variable~ source, scales = 'free', labeller = vlabeller)+
#  stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Bimodal DFE')+
TommyTheme
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(reshape2)
library(ggplot2)
library(wesanderson)
options(scipen=10000)
?wes_palette
pal <- wes_palette(n = 5, name = "Royal1", type = "continuous")
TommyTheme <-
theme_bw()+
theme(
axis.title.x = element_text(size=14,angle=0),
axis.title.y = element_text(size=17,vjust=0.5),
axis.text.x = element_text(size=12,angle=90),
axis.text.y = element_text(size=12,angle=0),
strip.text.y = element_text(size = 20, face = 'italic'),
strip.text.x = element_text(size = 20, face = 'italic')
)
rawBoots <- read.csv('analysis/BimodalSims.csv')
rawBoots$product1 <- rawBoots$NeSa1 * rawBoots$pa1
rawBoots$product2 <- rawBoots$NeSa2 * rawBoots$pa2
Boots<-melt(rawBoots, id = c('identifier'))
rawSims1 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE.analysisScaled.txt')
rawSims1$product1 <- rawSims1$NeSa1 * rawSims1$pa1
rawSims1$product2 <- rawSims1$NeSa2 * rawSims1$pa2
Sims1<-melt(rawSims1, id = c('identifier','X','rep', 'AIC'))
Sims1$identifier <- 'Bimodal'
rawSims2 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE_div10.analysisScaled.txt')
rawSims2$product1 <- rawSims2$NeSa1 * rawSims2$pa1
rawSims2$product2 <- rawSims2$NeSa2 * rawSims2$pa2
Sims2<-melt(rawSims2, id = c('identifier','X','rep', 'AIC'))
Sims2$identifier <- 'Bimodal_div10'
rawSims3 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE_div100.analysisScaled.txt')
rawSims3$product1 <- rawSims3$NeSa1 * rawSims3$pa1
rawSims3$product2 <- rawSims3$NeSa2 * rawSims3$pa2
Sims3<-melt(rawSims3, id = c('identifier','X','rep', 'AIC'))
Sims3$identifier <- 'Bimodal_div100'
Sims <- rbind(Sims1,Sims2,Sims3)
bimLabs <- c("NeSa1","NeSa2","pa1","pa2","product1","product2")
Sims$variable <- factor(Sims$variable, levels = bimLabs,
labels = bimLabs)
Boots$variable <- factor(Boots$variable, levels = bimLabs,
labels = bimLabs)
Sims$source <- 'Trough-Fitting'
selRaw <- read.csv('dfe-alpha/Bimodal_selectedSites.csv')
sel<-melt(selRaw,c("Es","L","N1","N2","N3","Nw","f0", "f2n","identifier", "b",  "rep", "sa.0.","pa.0.","sa.1.","pa.1.","t2","t3"))
sel$source <- 'DFE-alpha'
sel$ID<-paste(sel$identifier)
Sims$ID<-paste(Sims$identifier)
nSims <- subset(Sims, select=c('variable', 'value', 'ID', 'source'))
nsubset<- subset(sel, select=c('variable', 'value', 'ID', 'source'))
new<- rbind(nSims,nsubset)
vnames <-list(
'NeSa1' = expression(gamma[a(1)]),
'NeSa2' = expression(gamma[a(2)]),
'pa1' = expression(p[a(1)]),
'pa2' = expression(p[a(2)]),
'product1' = expression(gamma*p[a(1)]),
'product2' = expression(gamma*p[a(2)]),
'DFE-alpha' = 'DFE-alpha',
'Trough-Fitting' = 'Trough-Fitting')
vlabeller <- function(variable,value){
return(vnames[value])
}
new$value <- round(new$value*1e8)/1e8
ggplot(data = new, aes( x = ID, y =  value, col = source))+
geom_violin( size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = value, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid(variable~ source, scales = 'free', labeller = vlabeller)+
#  stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Bimodal DFE')+
TommyTheme
new$value <- round(new$value*1e8)/1e8
ggplot(data = new, aes( x = ID, y =  log2(value+1), col = source))+
geom_violin( size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = value, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid(variable~ source, scales = 'free', labeller = vlabeller)+
#  stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Bimodal DFE')+
TommyTheme
new$value <- round(new$value*1e8)/1e8
ggplot(data = new, aes( x = ID, y =  log2(value+1), col = source))+
geom_violin( size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = 1, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid(variable~ source, scales = 'free', labeller = vlabeller)+
#  stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Bimodal DFE')+
TommyTheme
ggplot(data = new, aes( x = ID, y =  log2(value+1), col = source))+
geom_violin( size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = 1, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid( source ~ variable, scales = 'free', labeller = vlabeller)+
#  stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Bimodal DFE')+
TommyTheme
new$value <- round(new$value*1e8)/1e8
ggplot(data = new, aes( x = ID, y =  log2(value+1), col = source))+
geom_violin( size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = 1, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid( source ~ variable, scales = 'free', labeller = vlabeller)+
#  stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Bimodal DFE')+
TommyTheme
ggplot(data = new, aes( x = ID, y =  log2(value+1), col = source))+
geom_violin( size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = 1, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid( source ~ variable, scales = 'free', labeller = vlabeller)+
#  stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Bimodal DFE')+
TommyTheme
ggplot(data = new, aes( x = ID, y =  log10(value+9), col = source))+
geom_violin( size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = 1, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid( source ~ variable, scales = 'free', labeller = vlabeller)+
#  stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Bimodal DFE')+
TommyTheme
polyDFEraw = read.csv('run_polyDFE/ExponentialPolyDFE.csv')
rm(list=ls())
pal <- wes_palette(n = 5, name = "Royal1", type = "continuous")
TommyTheme <-
theme_bw()+
theme(
axis.title.x = element_text(size=14,angle=0),
axis.title.y = element_text(size=17,vjust=0.5),
axis.text.x = element_text(size=12,angle=90),
axis.text.y = element_text(size=12,angle=0),
strip.text.y = element_text(size = 20, face = 'italic'),
strip.text.x = element_text(size = 20, face = 'italic')
)
polyDFEraw = read.csv('run_polyDFE/ExponentialPolyDFE.csv')
polyDFE <- melt(polyDFEraw, id = c('model', 'number', 'b','S_d'))
polyDFE$identifier <- polyDFE$model
polyDFE$source <- 'polyDFE'
Trough1raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes100_dDFE.Exponential.analysisScaled.txt')
Trough1raw$product<-Trough1raw$NeSa*Trough1raw$pa
Trough1<-melt(Trough1raw, id = c('AIC','identifier','rep','X'))
Trough1$identifier<- 'Exp100'
Trough1$source <- 'Trough-Fitting'
Trough2raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes100_dDFE.Exponential_div10.analysisScaled.txt')
Trough2raw$product<-Trough2raw$NeSa*Trough2raw$pa
Trough2<-melt(Trough2raw, id = c('AIC','identifier','rep','X'))
Trough2$identifier<- 'Exp100 - div10'
Trough2$source <- 'Trough-Fitting'
Trough3raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes10_dDFE.Exponential.analysisScaled.txt')
Trough3raw$product<-Trough3raw$NeSa*Trough3raw$pa
Trough3<-melt(Trough3raw, id = c('AIC','identifier','rep','X'))
Trough3$identifier<- 'Exp10'
Trough3$source <- 'Trough-Fitting'
Trough4raw<- read.csv('analysis/BGS+SWEEPS/Exp.Nes10_dDFE.Exponential_div10.analysisScaled.txt')
Trough4raw$product<-Trough4raw$NeSa*Trough4raw$pa
Trough4<-melt(Trough4raw, id = c('AIC','identifier','rep','X'))
Trough4$identifier<- 'Exp10 - div10'
Trough4$source <- 'Trough-Fitting'
Troughs <- rbind(Trough1, Trough2, Trough3, Trough4)
rawExp <- read.csv('~/PhD/Coding/Estimate_selection_from_troughs/simulations/analysis/expSims.csv')
rawExp$product = rawExp$NeSa * rawExp$pa
Exp <- melt(rawExp, id = 'identifier')
vnames <-list(
'NeSa' = expression(gamma[a]),
'pa' = expression(p[a]),
'product' = expression(gamma*p[a]),
'polyDFE' = 'polyDFE',
'Trough-Fitting' = 'Trough-Fitting')
vlabeller <- function(variable,value){
return(vnames[value])
}
Troughs$value <- round(Troughs$value*1e8)/1e8
polyDFE$value <- round(polyDFE$value*1e8)/1e8
ggplot(data = polyDFE , aes (x = identifier, y = value, col = source))+
geom_boxplot(fill= source)+
geom_boxplot(data = Troughs, aes( x = identifier, y = value, col = source))+
geom_point(data= Exp, aes( x = identifier, y = value, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid(variable~source, scales = 'free', labeller = vlabeller)+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Exponential DFE')+
TommyTheme
ggplot(data = polyDFE , aes (x = identifier, y = value, col = source))+
geom_boxplot(fill= source)+
geom_boxplot(data = Troughs, aes( x = identifier, y = value, col = source))+
geom_point(data= Exp, aes( x = identifier, y = value, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid(variable~source, scales = 'free', labeller = vlabeller)+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Exponential DFE')+
TommyTheme
log10(1)
ggplot(data = new, aes( x = ID, y =  log10(value), col = source))+
geom_violin( size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = log10(1), col = 'True\nValue'), shape = '_', size = 15)+
facet_grid( source ~ variable, scales = 'free', labeller = vlabeller)+
#  stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10(expression(log[10] * '(est/sim)'))+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Bimodal DFE')+
TommyTheme
ggplot(data = new, aes( x = ID, y =  value, col = source))+
geom_violin(size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = value, col = 'True\nValue'), shape = '_', size = 15)+
facet_grid(variable~source , scales = 'free',  labeller = vlabeller)+
#   stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10('')+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Fixed-Class DFE')+
TommyTheme
log10(2)
log10(1)
log10(0.9)
log10(100)
rawSims1 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE.analysisScaled.txt')
rawSims1
rawBoots <- read.csv('analysis/BimodalSims.csv')
rawBoots$product1 <- rawBoots$NeSa1 * rawBoots$pa1
rawBoots$product2 <- rawBoots$NeSa2 * rawBoots$pa2
Boots<-melt(rawBoots, id = c('identifier'))
rawSims1 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE.analysisScaled.txt')
rawSims1
Sims1<-melt(rawSims1, id = c('identifier','X','rep', 'AIC'))
Sims1$identifier <- 'Bimodal'
rawSims2 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE_div10.analysisScaled.txt')
Sims2<-melt(rawSims2, id = c('identifier','X','rep', 'AIC'))
Sims2$identifier <- 'Bimodal_div10'
rawSims3 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE_div100.analysisScaled.txt')
Sims3<-melt(rawSims3, id = c('identifier','X','rep', 'AIC'))
Sims3$identifier <- 'Bimodal_div100'
Sims <- rbind(Sims1,Sims2,Sims3)
bimLabs <- c("NeSa1","NeSa2","pa1","pa2","product1","product2")
Sims$variable <- factor(Sims$variable, levels = bimLabs,
labels = bimLabs)
Boots$variable <- factor(Boots$variable, levels = bimLabs,
labels = bimLabs)
Sims$source <- 'Trough-Fitting'
selRaw <- read.csv('dfe-alpha/Bimodal_selectedSites.csv')
sel<-melt(selRaw,c("Es","L","N1","N2","N3","Nw","f0", "f2n","identifier", "b",  "rep", "sa.0.","pa.0.","sa.1.","pa.1.","t2","t3"))
sel$source <- 'DFE-alpha'
sel$ID<-paste(sel$identifier)
Sims$ID<-paste(Sims$identifier)
nSims <- subset(Sims, select=c('variable', 'value', 'ID', 'source'))
nsubset<- subset(sel, select=c('variable', 'value', 'ID', 'source'))
new<- rbind(nSims,nsubset)
vnames <-list(
'NeSa1' = expression(gamma[a(1)]),
'NeSa2' = expression(gamma[a(2)]),
'pa1' = expression(p[a(1)]),
'pa2' = expression(p[a(2)]),
'product1' = expression(gamma*p[a(1)]),
'product2' = expression(gamma*p[a(2)]),
'DFE-alpha' = 'DFE-alpha',
'Trough-Fitting' = 'Trough-Fitting')
vlabeller <- function(variable,value){
return(vnames[value])
}
ggplot(data = new, aes( x = ID, y =  log10(value), col = source))+
geom_violin( size = 0.8)+
geom_point(data= Boots, aes( x = identifier, y = log10(1), col = 'True\nValue'), shape = '_', size = 15)+
facet_grid( source ~ variable, scales = 'free', labeller = vlabeller)+
#  stat_summary(fun.y = median, fun.ymin = min, fun.ymax = max, colour = pal[3])+
scale_y_log10(expression(log[10] * '(est/sim)'))+
scale_x_discrete('')+
scale_color_manual('',values = pal)+
ggtitle('Bimodal DFE')+
TommyTheme
new
log10(100)
9887 * 1.24e-5
rawSims1
rawSims1 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE.analysisScaled.txt')
rawSims1 <- read.csv('analysis/BGS+SWEEPS/BimodalDFE.analysisScaled.txt')
rawSims1
Sims1$identifier <- 'Bimodal'
249 * 2.21e-4
0.1/500
0.1/100
